esphome:
  name: esp32-louder
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
  ## use priority 250 so gpio and i2c dac is setup before volume is set
    priority: 250
    then:
    ## Set a volume limit just to be safe...
    - media_player.volume_set:
        id: louder_mediaplayer
        volume: 1%

esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  flash_size: 16MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_ESP32S3_INSTRUCTION_CACHE_32KB: "y"
      CONFIG_ESP32_S3_BOX_BOARD: "y"
      CONFIG_SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY: "y"

      CONFIG_SPIRAM_TRY_ALLOCATE_WIFI_LWIP: "y"

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "w520PFA3Ik65hxHdBkVM/Q5wR/LIngfOFfX0QgQtduM="

ota:
  - platform: esphome
    password: "35925d04e9ba07c835429bb2c040be8e"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Louder Fallback Hotspot"
    password: "2SJ8qzBXk3SN"

captive_portal:

psram:
  mode: octal
  speed: 80MHz

external_components:
  - source: github://mrtoy-me/esphome-components-test@main
    components: [ tas5805m ]
    refresh: 0s

# external_components:
#   - source: components

i2c:
  sda: GPIO8
  scl: GPIO9
  frequency: 400kHz
  scan: True

audio_dac:
  - platform: tas5805m
    id: tas5805m_dac
    enable_pin: GPIO17

i2s_audio:
  i2s_lrclk_pin: GPIO15
  i2s_bclk_pin: GPIO14

speaker:
  - platform: i2s_audio
    id: speaker_id
    dac_type: external
    i2s_dout_pin: GPIO16
    audio_dac: tas5805m_dac
    channel: stereo
    sample_rate: 48000

  - platform: mixer
    id: mixer_speaker_id
    output_speaker: speaker_id
    source_speakers:
      - id: announcement_spk_mixer_input
      - id: media_spk_mixer_input

  - platform: resampler
    id: media_spk_resampling_input
    output_speaker: media_spk_mixer_input

  - platform: resampler
    id: announcement_spk_resampling_input
    output_speaker: announcement_spk_mixer_input

media_player:
  - platform: speaker
    name: Louder-ESP32 mediaplayer
    id: louder_mediaplayer
    media_pipeline:
        speaker: media_spk_resampling_input
        num_channels: 2
    announcement_pipeline:
        speaker: announcement_spk_resampling_input
        num_channels: 1
    on_play:
       - switch.turn_on: enable_louder
switch:
  - platform: template
    name: Enable Louder-ESP32
    id: enable_louder
    optimistic: true
    turn_on_action:
      - lambda: !lambda |-
          id(tas5805m_dac).set_deep_sleep_off();
    turn_off_action:
      - lambda: !lambda |-
          id(tas5805m_dac).set_deep_sleep_on();

  # - platform: template
  #   name: Mute Louder-ESP32
  #   id: mute_louder
  #   optimistic: true
  #   turn_on_action:
  #     - lambda: !lambda |-
  #         id(tas5805m_dac).set_mute_on();
  #   turn_off_action:
  #     - lambda: !lambda |-
  #         id(tas5805m_dac).set_mute_off();

# number:
#   - platform: template
#     name: "Digital Volume"
#     optimistic: true
#     min_value: -103
#     max_value: 24
#     step: 0.5
#     initial_value: 0.0
#     device_class: sound_pressure
#     unit_of_measurement: dB
#     on_value:
#       then:
#         - lambda: !lambda |-
#             id(tas5805_dac).set_volume(x);

interval:
  - interval: 1min
    then:
      - if:
          condition:
            - switch.is_on: enable_louder
            - for:
                time: 30s
                condition:
                  or:
                    - media_player.is_idle: louder_mediaplayer
                    - media_player.is_paused: louder_mediaplayer
          then:
            - switch.turn_off: enable_louder